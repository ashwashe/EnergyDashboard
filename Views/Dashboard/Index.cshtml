@model DashboardViewModel


<style>
    /* Add your CSS styles here */

    .sidebar {
        height: 100%;
        width: 250px;
        position: fixed;
        z-index: 1;
        top: 0;
        left: 0;
        background-color: #111;
        overflow-x: hidden;
        padding-top: 20px;
        color: white;
    }

    .sidebar h2, .sidebar h3 {
        padding: 6px 16px;
        text-align: center;
        margin: 0;
    }

    .sidebar ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .sidebar ul li a {
        padding: 10px 15px;
        text-decoration: none;
        color: white;
        display: block;
    }

    .sidebar ul li a:hover {
        background-color: #575757;
    }

    .content {
        margin-left: 250px;
        padding: 1px 16px;
        height: 1000px; /* Sample height */
    }

    .form-container {
        margin-top: 20px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f2f2f2;
    }

    .form-container label {
        font-weight: bold;
    }

    .form-container select {
        width: 200px;
        padding: 5px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    .form-container button {
        margin-top: 10px;
        padding: 5px 10px;
        border: none;
        border-radius: 3px;
        background-color: #4CAF50;
        color: white;
        cursor: pointer;
    }

    /* Additional CSS styles for controls */
    #userDropdown, #monthDropdown {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        margin-bottom: 10px;
    }

    #submitButton {
        width: 100%;
        padding: 5px 10px;
        border: none;
        border-radius: 3px;
        background-color: #4CAF50;
        color: white;
        cursor: pointer;
    }

    /* New CSS styles */
    .sidebar h2 {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .sidebar h3 {
        font-size: 18px;
        margin-bottom: 10px;
    }

    .content h1 {
        font-size: 28px;
        margin-bottom: 20px;
    }

    .form-container {
        margin-bottom: 20px;
    }

    .form-container select {
        width: 100%;
        margin-bottom: 10px;
    }

    .form-container button {
        width: 100%;
        margin-bottom: 10px;
    }

    #energyGraph {
        width: 100%;
        height: 400px;
        margin-top: 20px;
    }
</style>
<div class="sidebar">
    <style>
        /* Add your CSS styles here */

        .sidebar {
            height: 100%;
            width: 250px;
            position: fixed;
            z-index: 1;
            top: 0;
            left: 0;
            background-color: #111;
            overflow-x: hidden;
            padding-top: 20px;
            color: white;
        }

            .sidebar h2, .sidebar h3 {
                padding: 6px 16px;
                text-align: center;
            }

            .sidebar ul {
                list-style-type: none;
                padding: 0;
            }

                .sidebar ul li a {
                    padding: 10px 15px;
                    text-decoration: none;
                    color: white;
                    display: block;
                }

                    .sidebar ul li a:hover {
                        background-color: #575757;
                    }
    </style>
    <h2>Solar Dashboard</h2>
    <h3>powered by Shell Global</h3>
    <ul>
        <li><a asp-area="" asp-controller="Dashboard" asp-action="Index">Dashboard</a></li>
        <li><a asp-area="" asp-controller="Dashboard" asp-action="Index">Profile Settings</a></li>
        <li><a asp-area="" asp-controller="Login" asp-action="Logout">Logout</a></li>
    </ul>
</div>



<div class="content">
    <!-- Your dashboard content goes here -->

    <div class="">
        <h1>Welcome, @User.Identity.Name!</h1>
    </div>

    <div class="form-container">

     

        <select id="userSelect" onchange="fetchDataAndRenderGraph()">
            <option value="">Please select</option>
            @foreach (var user in Model.Users)
            {
                <option value="@user.Id">@user.name</option>
            }
        </select>
        <select id="timePeriodSelect" onchange="fetchDataAndRenderGraph()">
            <option value="month">Current Month</option>
            <option value="week">Current Week</option>
            <option value="year">Current Year</option>
        </select>

    </div>
    <div>
        <canvas id="energyGraph" width="400" height="200"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // document.getElementById('userSelect').addEventListener('change', function () 
        // {
            
        //     var userId = this.value;
        //     if (userId) {
        //         fetchDataAndRenderGraph(userId);
        //     }
        // });

        let energyChart; // Move the chart variable outside the function to keep its reference
        function fetchDataAndRenderGraph() {
        // function fetchDataAndRenderGraph(userId) {
            const timePeriod = document.getElementById('timePeriodSelect').value;
            const userId = document.getElementById('userSelect').value;
            fetch(`/Dashboard/GetEnergyData?userId=${userId}&timePeriod=${timePeriod}`)
                .then(response => response.json())
                .then(data => {
                    var ctx = document.getElementById('energyGraph').getContext('2d');
                    if (energyChart) {
                        // Update the chart data
                        energyChart.data.labels = data.labels || [];
                        energyChart.data.datasets[0].data = data.consumptionData;
                        energyChart.data.datasets[1].data = data.generationData;
                        energyChart.update(); // Update the chart to reflect new data
                    } else {
                        // Create the chart for the first time
                        energyChart = new Chart(ctx, {
                            type: 'bar', // Change to 'bar', 'pie', etc. based on your preference
                            data: {
                                labels: data.labels || [], // Replace with actual labels or ensure data.labels is populated
                                datasets: [{
                                    label: 'Energy Consumption',
                                    data: data.consumptionData,
                                    borderColor: 'rgb(255, 99, 132)',
                                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                }, {
                                    label: 'Energy Generation',
                                    data: data.generationData,
                                    borderColor: 'rgb(54, 162, 235)',
                                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                }]
                            },
                            options: {}
                        });
                    }
                })
                .catch(error => console.error('Error fetching data:', error));
        }

      
    </script>
}
